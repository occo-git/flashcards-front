// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

:root {
  --bg-color: #fcfcfc; // Background color
  --prime-color: #1a73e8;
  --prime-color-dark: #0054c2;
  --disabled-color: #e4e4e4;
  --border-color: #cacaca;
  --light-color: #ffffff;
  --mid-color: #e4e4e4;
  --dark-color: #272727;
  --error-bg-color: #ffe6e6; // Error background color
  --error-color: #d93025; // Error color

  --transition-speed: 0.5s;
  --box-shadow: 0 8px 8px rgba(0, 0, 0, 0.1);
  --border-R: 25px;
  --border-r: 12px;
}

html,
body {
  height: 100%;
  width: 100%;
}

html {
  @include mat.theme((color: (primary: mat.$azure-palette,
        tertiary: mat.$blue-palette,
      ),
      typography: Roboto,
      density: 0,
    ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--bg-color); // var(--mat-sys-surface);
  //color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}

/* You can add global styles to this file, and also import other style files */

h1 {
  font-size: 2.5rem;
  color: var(--prime-color);
  text-align: left;
}

h2 {
  //background-color: yellow;
  font-size: 2rem;
  color: var(--prime-color);
  text-align: left;
}

h3 {
  //background-color: orange;
  font-size: 1.75rem;
  color: var(--prime-color);
  text-align: left;
}

.border-control {
  background-color: var(--light-color);
  width: 400px;
  padding: 32px 64px;
  border-radius: var(--border-R);
  border: 1px solid var(--border-color);
  box-shadow: var(--box-shadow);
}

button {
  background-color: var(--prime-color);
  color: var(--light-color);
  height: 50px; // Фиксированная высота кнопки
  width: auto; // Автоматическая ширина в зависимости от контента
  min-width: 200px; // Минимальная ширина кнопки
  border: none;
  border-radius: var(--border-R);
  cursor: pointer;
  position: relative; // Позиционирование для псевдоэлементов
  user-select: none;

  &:hover:not(:disabled) {
    background-color: var(--prime-color-dark);
  }

  &:active:not(:disabled) {
    transform: scale(0.98);
  }

  &:disabled {
    background-color: var(--disabled-color);
    cursor: not-allowed;
    //opacity: 0.2; // Тусклый цвет для отключённой кнопки

    &::after {
      display: none; // Убираем стрелку для задизабленной кнопки
    }
  }

  // Стрелка влево
  &.left {
    &::after {
      content: '';
      position: absolute;
      left: 8px; // Отступ от края
      top: 50%;
      transform: translateY(-50%);
      border: 10px solid transparent; // Создаем стрелку
      border-right-color: var(--light-color); // Цвет стрелки
    }
  }

  // Стрелка вправо
  &.right {
    &::after {
      content: '';
      position: absolute;
      right: 8px; // Отступ от края
      top: 50%;
      transform: translateY(-50%);
      border: 10px solid transparent; // Создаем стрелку
      border-left-color: var(--light-color); //
    }
  }
}



::ng-deep .custom-dropdown-panel {
  background-color: var(--light-color) !important;
  border-radius: var(--border-R) !important;
  //padding: 0px !important;
  padding: 8px !important;
  translate: -24px 12px !important;
  
  // === КОНТЕЙНЕР ПАНЕЛИ ===
  .mat-mdc-select-panel {
    background: var(--bg-color) !important;
    border-radius: var(--border-R) !important;
    //box-shadow: 0 12px 32px rgba(0, 0, 0, 0.15) !important;
    max-height: 400px !important;
    //overflow-y: auto !important;
    animation: fadeIn 0.25s ease-out;
  }

  // === ПУНКТЫ (mat-option) ===
  .mat-mdc-option {
    //color: var(--dark-color) !important;
    font-size: 1rem !important;
    //font-weight: 500 !important;
    height: 50px !important;
    border-radius: var(--border-R) !important;
    transition: all 0.2s ease !important;

    &:hover {
      background-color: var(--mid-color) !important;
      color: var(--light-color) !important;
      //transform: translateX(1px);
    }
    &.mat-mdc-option-active {
      background-color: var(--mid-color) !important;
      //color: var(--dark-color) !important;
    }
    &.mat-mdc-option-selected:not(.mat-mdc-option-multiple) {
      //background-color: var(--prime-color-dark) !important;
      //color: var(--light-color) !important;
      //font-size: 1rem !important;

      .mat-icon {
        color: var(--light-color) !important;
      }
    }
  }

  &::-webkit-scrollbar {
    width: 8px !important;
  }
  &::-webkit-scrollbar-track {
    background: var(--light-color) !important;
    border-radius: var(--border-r) !important;
  }
  &::-webkit-scrollbar-thumb {
    background: var(--light-color) !important;
    border-radius: var(--border-r) !important;

    &:hover {
      background: var(--mid-color) !important;
    }
  }

  .mat-pseudo-checkbox-checked {
    background: var(--light-color) !important;
    width: 24px !important;
    height: 24px !important;
    border-radius: var(--border-r) !important;
  }
}